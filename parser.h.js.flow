/* @flow */
// vim: set ft=Typescript:

var Buffer = require('buffer').Buffer;

type IOnFrameBuffer = (
    context: any, buffer: Buffer, offset: number, length: number
) => void;

declare export class FrameParser {
    remainderBuffer: null | Buffer;
    hasTempRemainderBuffer: boolean;
    remainderOffset: number;
    frameLength: number;

    _context: any;
    _onFrameBuffer: IOnFrameBuffer;

    constructor(context: any, onFrameBuffer: IOnFrameBuffer): void;

    write: (networkBuffer: Buffer, start: number, end: number) => void;
    _addRemainder: (
        networkBuffer: Buffer,
        startOfBuffer: number,
        endOfNetworkBuffer: number
    ) => Buffer;
    _readInitialFrameLength: (
        networkBuffer: Buffer, startOfBuffer: number
    ) => void;
    _pushFrameBuffer: (
        networkBuffer: Buffer, startOfBuffer: number, endOfBuffer: number
    ) => void;
}
